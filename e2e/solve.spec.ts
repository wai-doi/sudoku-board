import { expect, test } from '@playwright/test'

test.beforeEach(async ({ page }) => {
  page.on('dialog', (dialog) => dialog.accept())

  await page.goto('/')
})

test('Ëß£Á≠î„É¢„Éº„Éâ„ÅßÊï∞Â≠ó„ÇíÂÖ•Âäõ„Åß„Åç„Çã', async ({ page }) => {
  const switchModeButton = page.getByRole('button', { name: 'Ëß£Á≠î„É¢„Éº„Éâ„Å´Âàá„ÇäÊõø„Åà' })
  await switchModeButton.click()

  const cell = page.getByTestId('cell-4-4')

  await expect(cell).toHaveText('')

  await cell.click()

  await page.keyboard.press('1')
  await expect(cell).toHaveText('1')

  await page.keyboard.press('2')
  await expect(cell).toHaveText('2')
})

test('Ëß£Á≠î„É¢„Éº„Éâ„ÅßÁ∑®ÈõÜ„É¢„Éº„Éâ„Åã„ÇâÂÖ•Âäõ„Åï„Çå„Å¶„ÅÑ„ÇãÊï∞Â≠ó„Çí‰∏äÊõ∏„Åç„Åß„Åç„Å™„ÅÑ', async ({ page }) => {
  const cell = page.getByTestId('cell-4-4')
  await cell.click()

  await page.keyboard.press('1')
  await expect(cell).toHaveText('1')

  const switchModeButton = page.getByRole('button', { name: 'Ëß£Á≠î„É¢„Éº„Éâ„Å´Âàá„ÇäÊõø„Åà' })
  await switchModeButton.click()

  await cell.click()

  await page.keyboard.press('2')
  await expect(cell).toHaveText('1')
})

test('Ëß£Á≠î„É¢„Éº„Éâ„ÅßÂÄôË£ú„ÅÆÊï∞Â≠ó„ÇíÂÖ•Âäõ„Åß„Åç„Çã', async ({ page }) => {
  const switchModeButton = page.getByRole('button', { name: 'Ëß£Á≠î„É¢„Éº„Éâ„Å´Âàá„ÇäÊõø„Åà' })
  await switchModeButton.click()

  const cell = page.getByTestId('cell-4-4')

  await expect(cell).toHaveText('')

  await cell.click()

  await page.keyboard.down('Shift')

  await page.keyboard.press('Digit1')
  await expect(cell).toHaveText('1')

  await page.keyboard.press('Digit2')
  await expect(cell).toHaveText('12')

  await page.keyboard.press('Digit3')
  await expect(cell).toHaveText('123')

  await page.keyboard.press('Digit4')
  await expect(cell).toHaveText('1234')

  await page.keyboard.press('Digit5')
  await expect(cell).toHaveText('12345')

  await page.keyboard.press('Digit6')
  await expect(cell).toHaveText('123456')

  await page.keyboard.press('Digit7')
  await expect(cell).toHaveText('1234567')

  await page.keyboard.press('Digit8')
  await expect(cell).toHaveText('12345678')

  await page.keyboard.press('Digit9')
  await expect(cell).toHaveText('123456789')

  await page.keyboard.up('Shift')
})

test('Ëß£Á≠î„É¢„Éº„Éâ„ÅßÂÄôË£ú„ÅÆÊï∞Â≠ó„ÇíÂêå„ÅòÊï∞Â≠ó„ÇíÂÖ•Âäõ„Åô„Çã„Å®ÂâäÈô§„Åß„Åç„Çã', async ({ page }) => {
  const switchModeButton = page.getByRole('button', { name: 'Ëß£Á≠î„É¢„Éº„Éâ„Å´Âàá„ÇäÊõø„Åà' })
  await switchModeButton.click()

  const cell = page.getByTestId('cell-4-4')

  await expect(cell).toHaveText('')

  await cell.click()

  await page.keyboard.down('Shift')

  await page.keyboard.press('Digit1')
  await expect(cell).toHaveText('1')

  await page.keyboard.press('Digit2')
  await expect(cell).toHaveText('12')

  await page.keyboard.press('Digit1')
  await expect(cell).toHaveText('2')
})

test('Ëß£Á≠î„É¢„Éº„Éâ„ÅßÂÄôË£ú„ÅÆÊï∞Â≠ó„ÇíBackspace„ÅßÂâäÈô§„Åß„Åç„Çã', async ({ page }) => {
  const switchModeButton = page.getByRole('button', { name: 'Ëß£Á≠î„É¢„Éº„Éâ„Å´Âàá„ÇäÊõø„Åà' })
  await switchModeButton.click()

  const cell = page.getByTestId('cell-4-4')

  await expect(cell).toHaveText('')

  await cell.click()

  await page.keyboard.down('Shift')

  await page.keyboard.press('Digit1')
  await expect(cell).toHaveText('1')

  await page.keyboard.press('Digit2')
  await expect(cell).toHaveText('12')

  await page.keyboard.press('Backspace')
  await expect(cell).toHaveText('')
})

test('Ëß£Á≠î„É¢„Éº„Éâ„ÅßÂÄôË£ú„ÅÆÊï∞Â≠ó„ÇíÈÄöÂ∏∏„ÅÆÊï∞Â≠ó„ÇíÂÖ•Âäõ„Åó„Å¶‰∏äÊõ∏„Åç„Åß„Åç„Çã', async ({ page }) => {
  const switchModeButton = page.getByRole('button', { name: 'Ëß£Á≠î„É¢„Éº„Éâ„Å´Âàá„ÇäÊõø„Åà' })
  await switchModeButton.click()

  const cell = page.getByTestId('cell-4-4')

  await expect(cell).toHaveText('')

  await cell.click()

  await page.keyboard.down('Shift')

  await page.keyboard.press('Digit1')
  await expect(cell).toHaveText('1')

  await page.keyboard.up('Shift')

  await page.keyboard.press('2')
  await expect(cell).toHaveText('2')
})

test('Ëß£Á≠î„É¢„Éº„Éâ„ÅßÁ∑®ÈõÜ„É¢„Éº„Éâ„Å´Âàá„ÇäÊõø„Åà„Çã„Å®ÂÖ•Âäõ„Åó„ÅüÊï∞Â≠ó„Åå„É™„Çª„ÉÉ„Éà„Åï„Çå„Çã', async ({ page }) => {
  const cell1 = page.getByTestId('cell-1-1')
  await cell1.click()

  await page.keyboard.press('1')
  await expect(cell1).toHaveText('1')

  const switchSolveModeButton = page.getByRole('button', { name: 'Ëß£Á≠î„É¢„Éº„Éâ„Å´Âàá„ÇäÊõø„Åà' })
  await switchSolveModeButton.click()

  const cell2 = page.getByTestId('cell-2-2')
  await cell2.click()

  await page.keyboard.press('2')

  await expect(cell1).toHaveText('1')
  await expect(cell2).toHaveText('2')

  const switchEditModeButton = page.getByRole('button', { name: 'Á∑®ÈõÜ„É¢„Éº„Éâ„Å´Âàá„ÇäÊõø„Åà' })
  await switchEditModeButton.click()

  await expect(page.getByText('üìù Á∑®ÈõÜ„É¢„Éº„Éâ')).toBeVisible()

  await expect(cell1).toHaveText('1')
  await expect(cell2).toHaveText('')
})

test('Ëß£Á≠î„É¢„Éº„Éâ„ÅßÊàª„Åô„Åì„Å®„Å®ÈÄ≤„ÇÅ„Çã„Åì„Å®„Åå„Åß„Åç„Çã', async ({ page }) => {
  const switchSolveModeButton = page.getByRole('button', { name: 'Ëß£Á≠î„É¢„Éº„Éâ„Å´Âàá„ÇäÊõø„Åà' })
  await switchSolveModeButton.click()

  const undoButton = page.getByRole('button', { name: 'Êàª„Åô' })
  await expect(undoButton).toBeDisabled()

  const redoButton = page.getByRole('button', { name: 'ÈÄ≤„ÇÄ' })
  await expect(redoButton).toBeDisabled()

  const cell = page.getByTestId('cell-4-4')
  await cell.click()

  await page.keyboard.down('Shift')

  await page.keyboard.press('Digit1')
  await expect(cell).toHaveText('1')

  await page.keyboard.press('Digit2')
  await expect(cell).toHaveText('12')

  await page.keyboard.up('Shift')

  await page.keyboard.press('3')
  await expect(cell).toHaveText('3')

  await undoButton.click()
  await expect(cell).toHaveText('12')

  await undoButton.click()
  await expect(cell).toHaveText('1')

  await undoButton.click()
  await expect(cell).toHaveText('')

  await redoButton.click()
  await expect(cell).toHaveText('1')

  await redoButton.click()
  await expect(cell).toHaveText('12')

  await redoButton.click()
  await expect(cell).toHaveText('3')
})

test('Ëß£Á≠î„É¢„Éº„Éâ„Åß„ÇØ„É™„Ç¢„Åó„Åü„Å®„Åç„É°„ÉÉ„Çª„Éº„Ç∏„ÅåË°®Á§∫„Åï„Çå„Çã', async ({ page }) => {
  const switchSolveModeButton = page.getByRole('button', { name: 'Ëß£Á≠î„É¢„Éº„Éâ„Å´Âàá„ÇäÊõø„Åà' })
  await switchSolveModeButton.click()

  const answer = [
    [1, 2, 3, 4, 5, 6, 7, 8, 9],
    [4, 5, 6, 7, 8, 9, 1, 2, 3],
    [7, 8, 9, 1, 2, 3, 4, 5, 6],
    [2, 3, 4, 5, 6, 7, 8, 9, 1],
    [5, 6, 7, 8, 9, 1, 2, 3, 4],
    [8, 9, 1, 2, 3, 4, 5, 6, 7],
    [3, 4, 5, 6, 7, 8, 9, 1, 2],
    [6, 7, 8, 9, 1, 2, 3, 4, 5],
    [9, 1, 2, 3, 4, 5, 6, 7, 8],
  ]

  for (let i = 0; i <= 8; i++) {
    for (let j = 0; j <= 8; j++) {
      const cell = page.getByTestId(`cell-${i}-${j}`)
      await cell.click()
      await page.keyboard.press(String(answer[i][j]))
    }
  }

  await expect(page.getByText('üéâ Êï∞Áã¨„ÇØ„É™„Ç¢ÔºÅ')).toBeVisible()
})
